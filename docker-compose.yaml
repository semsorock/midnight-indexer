# This Docker Compose file is for local development and testing and NOT meant for production use!

services:
  chain-indexer:
    depends_on:
      postgres:
        condition: "service_healthy"
      nats:
        condition: "service_started"
    image: "midnightntwrk/chain-indexer:latest"
    restart: "no"
    environment:
      RUST_LOG: "chain_indexer=debug,indexer_common=debug,fastrace_opentelemetry=off,info"
      APP__APPLICATION__NETWORK_ID: $APP__APPLICATION__NETWORK_ID
      APP__INFRA__NODE__URL: $APP__INFRA__NODE__URL
      APP__INFRA__STORAGE__HOST: "postgres"
      APP__INFRA__STORAGE__PASSWORD: $APP__INFRA__STORAGE__PASSWORD
      APP__INFRA__PUB_SUB__URL: "nats:4222"
      APP__INFRA__PUB_SUB__PASSWORD: $APP__INFRA__PUB_SUB__PASSWORD
      APP__INFRA__LEDGER_STATE_STORAGE__PASSWORD: $APP__INFRA__LEDGER_STATE_STORAGE__PASSWORD
      APP__INFRA__LEDGER_STATE_STORAGE__URL: "nats:4222"
      APP__INFRA__ZSWAP_STATE_STORAGE__PASSWORD: $APP__INFRA__ZSWAP_STATE_STORAGE__PASSWORD
      APP__INFRA__ZSWAP_STATE_STORAGE__URL: "nats:4222"
    healthcheck:
      test: ["CMD-SHELL", "cat /var/run/chain-indexer/running"]
      start_interval: "5s"
      interval: "5s"
      timeout: "2s"
      retries: 2

  wallet-indexer:
    depends_on:
      postgres:
        condition: "service_healthy"
      nats:
        condition: "service_started"
    image: "midnightntwrk/wallet-indexer:latest"
    restart: "no"
    environment:
      RUST_LOG: "wallet_indexer=debug,indexer_common=debug,fastrace_opentelemetry=off,info"
      APP__APPLICATION__NETWORK_ID: $APP__APPLICATION__NETWORK_ID
      APP__INFRA__NODE__URL: $APP__INFRA__NODE__URL
      APP__INFRA__SECRET: $APP__INFRA__SECRET
      APP__INFRA__STORAGE__HOST: "postgres"
      APP__INFRA__STORAGE__PASSWORD: $APP__INFRA__STORAGE__PASSWORD
      APP__INFRA__ZSWAP_STATE_STORAGE__PASSWORD: $APP__INFRA__ZSWAP_STATE_STORAGE__PASSWORD
      APP__INFRA__ZSWAP_STATE_STORAGE__URL: "nats:4222"
      APP__INFRA__PUB_SUB__URL: "nats:4222"
      APP__INFRA__PUB_SUB__PASSWORD: $APP__INFRA__PUB_SUB__PASSWORD
    healthcheck:
      test: ["CMD-SHELL", "cat /var/run/wallet-indexer/running"]
      start_interval: "5s"
      interval: "5s"
      timeout: "2s"
      retries: 2

  indexer-api:
    depends_on:
      postgres:
        condition: "service_healthy"
      nats:
        condition: "service_started"
    image: "midnightntwrk/indexer-api:latest"
    restart: "no"
    ports:
      - "8088:8088"
    environment:
      RUST_LOG: "indexer_api=debug,indexer_common=debug,fastrace_opentelemetry=off,info"
      APP__INFRA__SECRET: $APP__INFRA__SECRET
      APP__INFRA__STORAGE__HOST: "postgres"
      APP__INFRA__STORAGE__PASSWORD: $APP__INFRA__STORAGE__PASSWORD
      APP__INFRA__PUB_SUB__URL: "nats:4222"
      APP__INFRA__PUB_SUB__PASSWORD: $APP__INFRA__PUB_SUB__PASSWORD
      APP__INFRA__LEDGER_STATE_STORAGE__PASSWORD: $APP__INFRA__LEDGER_STATE_STORAGE__PASSWORD
      APP__INFRA__LEDGER_STATE_STORAGE__URL: "nats:4222"
      APP__INFRA__ZSWAP_STATE_STORAGE__PASSWORD: $APP__INFRA__ZSWAP_STATE_STORAGE__PASSWORD
      APP__INFRA__ZSWAP_STATE_STORAGE__URL: "nats:4222"
    healthcheck:
      test: ["CMD-SHELL", "cat /var/run/indexer-api/running"]
      start_interval: "5s"
      interval: "5s"
      timeout: "2s"
      retries: 2

  indexer-standalone:
    profiles:
      - standalone
    image: "midnightntwrk/indexer-standalone:latest"
    restart: "no"
    ports:
      - "8088:8088"
    environment:
      RUST_LOG: "indexer_standalone=debug,chain_indexer=debug,indexer_api=debug,wallet_indexer=debug,indexer_common=debug,fastrace_opentelemetry=off,info"
      APP__INFRA__SECRET: $APP__INFRA__SECRET
      APP__INFRA__NODE__URL: "ws://node:9944"
    healthcheck:
      test: ["CMD-SHELL", "cat /var/run/indexer-standalone/running"]
      start_interval: "5s"
      interval: "5s"
      timeout: "2s"
      retries: 2

  postgres:
    image: "postgres:17.1-alpine"
    restart: "always"
    ports:
      - "15432:5432"
    volumes:
      - "./target/data/postgres:/var/lib/postgresql/data"
    environment:
      POSTGRES_USER: "indexer"
      POSTGRES_DB: "indexer"
      POSTGRES_PASSWORD: $APP__INFRA__STORAGE__PASSWORD
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U indexer"]
      interval: "5s"
      timeout: "2s"
      retries: 2
    security_opt:
      - no-new-privileges:true

  nats:
    image: "nats:2.11.1"
    restart: "always"
    command: ["--user", "indexer", "--pass", $APP__INFRA__PUB_SUB__PASSWORD, "-js"]
    ports:
      - "4222:4222"
    volumes:
      - "./target/data/nats:/tmp/nats"
    security_opt:
      - no-new-privileges:true

  node:
    image: "ghcr.io/midnight-ntwrk/midnight-node:0.13.0-alpha.3"
    restart: "always"
    ports:
      - "9944:9944"
    volumes:
      - "./target/data/node:/node"
    environment:
      SHOW_CONFIG: "false"
      CFG_PRESET: "dev"
    security_opt:
      - no-new-privileges:true

  mcp-server:
    # Experimental Model Context Protocol server to give AI clients safe, read-only access
    # to the Midnight GraphQL API exposed by the `indexer-api` container.
    # Docs: https://www.apollographql.com/docs/apollo-mcp-server/
    image: "ghcr.io/apollographql/apollo-mcp-server:latest"
    depends_on:
      indexer-api:
        condition: "service_healthy"
    environment:
      # Enable debug logging
      RUST_LOG: "debug"
      # Set the GraphQL endpoint
      APOLLO_MCP_SERVER_ENDPOINT: "http://indexer-api:8088/api/v1/graphql"
      # Enable introspection
      APOLLO_MCP_SERVER_INTROSPECTION: "true"
    command:
      - "--endpoint"
      - "http://indexer-api:8088/api/v1/graphql"
      - "--introspection"
      - "--log"
      - "debug"
      - "--schema"
      - "/data/schema-v1.graphql"
      - "--operations"
      - "/data/operations"
    restart: "no"
    # Expose on a non-conflicting host port (5001 â†’ 5000 in the container)
    ports:
      - "5001:5000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/mcp" ]
      interval: "10s"
      timeout: "3s"
      retries: 3
    volumes:
      - "./indexer-api/graphql/schema-v1.graphql:/data/schema-v1.graphql"
      - "./indexer-api/graphql/operations:/data/operations"
